<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ncnom&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-30T14:50:02.064Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ncmon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android Jetpack Architecture之ViewModel</title>
    <link href="http://yoursite.com/2018-09-26-Jetpack-Architecture-ViewModel/"/>
    <id>http://yoursite.com/2018-09-26-Jetpack-Architecture-ViewModel/</id>
    <published>2018-09-26T12:40:11.000Z</published>
    <updated>2018-09-30T14:50:02.064Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;br&gt;&amp;ensp;&amp;ensp;Jetpack已经出了很久很久了，近几年的GDD几乎每次都会介绍新的组件，说来惭愧，一直没有好好学习，看近年的Google 的很多Demo中其实都有所体现，之前都是大概的了解了一遍。最近决定，好好梳理一遍，既学习其用法，也尝试学习下其设计思想。也是时候该补充一下了。进入正题–ViewModel&lt;/br&gt;&lt;br&gt;&lt;br&gt;&amp;ensp;&amp;ensp;首先都是看官方的例子，&lt;a href=&quot;https://developer.android.google.cn/topic/libraries/architecture/viewmodel&quot; title=&quot;Jetpack-ViewModel&quot;&gt;ViewModel&lt;/a&gt;官方的的例子是会和另一个架构库LiveData写在一起，很多的博客也是照官方的例子来说明，开始接触时甚至给了我一种假象：ViewModel都是和LiveData一起使用的。后来阅读才了解，ViewModel和LiveData职责分工还是很明显的，使用LiveData Demo主要使用其observe功能，LiveDate的使用及原理之后再分析，甚至在appcompat-v7:27.1.1中直接单独集成了ViewModel.所以，故为排除干扰，今天不会使用官方的主流Demo用法，先来看ViewModel。&lt;/br&gt;&lt;br&gt;&lt;br&gt;&amp;ensp;&amp;ensp;Android的UI控制器（Activity和Fragment）从创建到销毁拥有自己完整的生命周期，当系统配置发生改变时（(Configuration changes)），系统就会销毁Activity和与之关联的Fragment然后再次重建&lt;font color=#FFA500&gt;（可通过在AndroidManifast.xml中配置android:configChanges修改某些行为，这里不讨论）&lt;/font&gt;,那么存储在当前UI中的临时数据也会被清空，例如，登陆输入框，输入账号或密码后旋转屏幕，视图被重建，输入过的数据也清空了，这无疑是一种不友好的用户体验。对于少量的可序列化数据可以使用onSaveInstanceState()方法保存然后在onCreate()方法中重新恢复，正如所说onSaveInstanceState对于大量的数据缓存有一定的局限性，大量的数据缓存则可以使用&lt;a href=&quot;https://developer.android.com/reference/android/support/v4/app/Fragment&quot; title=&quot;Fragment-reference&quot;&gt;Fragment&lt;/a&gt;.setRetainInstance(true)来保存数据。ViewModel也是提供了相同的功能，用来存储和管理与UI相关的数据，允许数据在系统配置变化后存活，我们一起看一下这个ViewModel的缓存是怎么实现的呢？&lt;/br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="技术栈" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Jetpack" scheme="http://yoursite.com/tags/Jetpack/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu搭建Nginx图片服务器</title>
    <link href="http://yoursite.com/2018-01-11-build-an-image-server/"/>
    <id>http://yoursite.com/2018-01-11-build-an-image-server/</id>
    <published>2018-01-11T12:40:11.000Z</published>
    <updated>2018-09-30T14:52:20.260Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;也许算作是建站以来的第一篇真正意义上的总结博客。  &lt;/p&gt;
&lt;p&gt;首先感谢开源本主题的viosey同学和辛苦维护本主题的neoFelhz同学，对此主题极为喜欢。&lt;/p&gt;
&lt;p&gt;新发现了当前的这个Meterial主题后发现居然有一个Gallery模板可以展示照片，平时的博客使用图片需要存放在一个位置上，平时也有一些业余的摄影爱好需要刚好可以存放，当然可以使用如之前使用过的七牛云等云对象存储平台存储使用，我这里也是刚好有个云服务器可以做存储就想着自己搭建一个图片服务器方便管理，也刚好能学习一下服务器方面的一些知识，经多次尝试，故总结一下,话不多说，开始行动.&lt;/p&gt;
&lt;h1 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h1&gt;&lt;p&gt;Ubuntu版本Ubuntu 16.04.3&lt;/p&gt;
&lt;h1 id=&quot;安装Nginx&quot;&gt;&lt;a href=&quot;#安装Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装Nginx&quot;&gt;&lt;/a&gt;安装Nginx&lt;/h1&gt;&lt;p&gt;首先是准备编译Nginx的前期准备工作  &lt;/p&gt;
&lt;h2 id=&quot;先更新一下源&quot;&gt;&lt;a href=&quot;#先更新一下源&quot; class=&quot;headerlink&quot; title=&quot;先更新一下源&quot;&gt;&lt;/a&gt;先更新一下源&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&amp;gt; apt-get update
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;安装gcc-g-依赖库&quot;&gt;&lt;a href=&quot;#安装gcc-g-依赖库&quot; class=&quot;headerlink&quot; title=&quot;安装gcc g++依赖库&quot;&gt;&lt;/a&gt;安装gcc g++依赖库&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&amp;gt; apt-get install build-essential
&amp;gt; apt-get install libtool
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;安装prce依赖库&quot;&gt;&lt;a href=&quot;#安装prce依赖库&quot; class=&quot;headerlink&quot; title=&quot;安装prce依赖库&quot;&gt;&lt;/a&gt;安装prce依赖库&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&amp;gt; apt-get install libpcre3 libpcre3-dev
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;安装-zlib依赖库&quot;&gt;&lt;a href=&quot;#安装-zlib依赖库&quot; class=&quot;headerlink&quot; title=&quot;安装 zlib依赖库&quot;&gt;&lt;/a&gt;安装 zlib依赖库&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&amp;gt; apt-get install zlib1g-dev
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;安装-ssl依赖库&quot;&gt;&lt;a href=&quot;#安装-ssl依赖库&quot; class=&quot;headerlink&quot; title=&quot;安装 ssl依赖库&quot;&gt;&lt;/a&gt;安装 ssl依赖库&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;&amp;gt; apt-get install openssl
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="技术栈" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="FTP" scheme="http://yoursite.com/tags/FTP/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio import project 出现Error错误 程序包org.apache.http不存在</title>
    <link href="http://yoursite.com/2018-01-07-Android-Studio-Error-2/"/>
    <id>http://yoursite.com/2018-01-07-Android-Studio-Error-2/</id>
    <published>2018-01-07T15:01:52.000Z</published>
    <updated>2018-01-08T16:33:17.603Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;遇到新的产品形态、样式需求我们经常会在Github搜索开源项目，有些项目是早期Android版本中开发而成，后续Google会有部分API在新版本中的SDK放弃集成，这次我导入一个项目时就遇到这样一个错误&lt;/p&gt;
&lt;p&gt;&lt;img
        
      
    
    </summary>
    
      <category term="错误志" scheme="http://yoursite.com/categories/%E9%94%99%E8%AF%AF%E5%BF%97/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="IDEError" scheme="http://yoursite.com/tags/IDEError/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView排雷--notifyItemRemoved下标（position）不能更新</title>
    <link href="http://yoursite.com/2017-10-29-RecyclerView-clear-of-mines-1/"/>
    <id>http://yoursite.com/2017-10-29-RecyclerView-clear-of-mines-1/</id>
    <published>2017-10-29T15:48:52.000Z</published>
    <updated>2018-01-07T15:35:18.958Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;用以显示列表类型的UI我们经常使用ListView，GridView，Google推出RecyclerView之后，大部分的使用均转换到了RecyclerView中，可定制化十分强，但是使用过程中难免碰到一些问题，之前使用ListView多是使用notifyDataSetC
        
      
    
    </summary>
    
      <category term="技术栈" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>Android Studio 更新后出现Error:No service of type Factory  available in ProjectScopeServices.解决办法</title>
    <link href="http://yoursite.com/2017-03-16-Android-Studio-Error-1/"/>
    <id>http://yoursite.com/2017-03-16-Android-Studio-Error-1/</id>
    <published>2017-03-15T17:01:52.000Z</published>
    <updated>2018-01-08T16:33:10.054Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;今天更新Android Studio后 之前能运行的项目出现错误:&lt;br&gt;&lt;img src=&quot;http://omv6ufghj.bkt.clouddn.com/image1.png&quot; alt=&quot;enter image description
        
      
    
    </summary>
    
      <category term="错误志" scheme="http://yoursite.com/categories/%E9%94%99%E8%AF%AF%E5%BF%97/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="IDEError" scheme="http://yoursite.com/tags/IDEError/"/>
    
  </entry>
  
</feed>
