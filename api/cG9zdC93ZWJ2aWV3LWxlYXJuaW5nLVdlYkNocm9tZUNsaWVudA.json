{"title":"Android WebView必知必会(3)-WebChromeClient","date":"2019-03-14T14:35:47.000Z","slug":"webview-learning-WebChromeClient","comments":true,"tags":["Android"],"categories":["技术栈"],"updated":"2019-03-23T06:29:14.825Z","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>😀WebChromeClient：当影响”浏览器”的事件到来时，就会通过WebChromeClient中的方法回调通知用法,所以WebChromeClient都是和我们平时使用浏览器需要的一些交互有密切的联系。</p>\n<a id=\"more\"></a>\n<h2 id=\"获取网页的加载进度\"><a href=\"#获取网页的加载进度\" class=\"headerlink\" title=\"获取网页的加载进度\"></a>获取网页的加载进度</h2><ul>\n<li><p>void  onProgressChanged(WebView view, int newProgress)  ；</p>\n<p>Tell the host application the current progress of loading a page. </p>\n<p>newProgress: Current page loading progress, represented by an integer between 0 and 100.</p>\n<p>大家一定要注意，底层实现时，是利用handler来定时轮循当前进度的，每隔一定时间查询一次，所以每次拿到的进度数据是不一样的。也就是说如果页面较简单，可能会直接返回100，而跳过中间的各个数据。也就是说，除了100，其它任何一个数值不是一定返回的。所以大家如果要用到进度，除了数值100可以用等号来判断，其它一定要用大于号或小于号，如果用了等号，可能永远也不会执行到。</p>\n</li>\n</ul>\n<h2 id=\"获取网页中的基本信息\"><a href=\"#获取网页中的基本信息\" class=\"headerlink\" title=\"获取网页中的基本信息\"></a>获取网页中的基本信息</h2><ul>\n<li><p>void  onReceivedIcon(WebView view, Bitmap icon) </p>\n<p>icon A Bitmap containing the favicon for the current page.网页中首部图标</p>\n</li>\n<li><p>void  onReceivedTitle(WebView view, String title) </p>\n<p>title: A String containing the new title of the document. 网页中标题中的更改，首部标题</p>\n<p>获取标题的时间主要取决于网页前端设置标题的位置，JS中的函数设置也在这里接收</p>\n</li>\n<li><p>void  onReceivedTouchIconUrl(WebView view, String url, boolean precomposed)  Notify the host application of the url for an apple-touch-icon(苹果图标). </p>\n</li>\n<li><p>苹果为iOS设备配备了apple-touch-icon私有属性，添加该属性，在iPhone,iPad,iTouch的safari浏览器上可以使用添加到主屏按钮将网站添加到主屏幕上，方便用户以后访问。apple-touch-icon 标签支持sizes属性，可以用来放置对应不同的设备。</p>\n<p>url: The icon url.图片地址</p>\n<p>precomposed: True if the url is for a precomposed touch icon. 标记为True的话使用原图</p>\n</li>\n</ul>\n<h2 id=\"拦截网页中JS控制台消息\"><a href=\"#拦截网页中JS控制台消息\" class=\"headerlink\" title=\"拦截网页中JS控制台消息\"></a>拦截网页中JS控制台消息</h2><p>当html中调用console相关输出的时候，就会通过onConsoleMessage进行通知</p>\n<p>和alert,prompt,confirm不同，我们不需要强制设置WebChromeClient（但是仍需要setJavaScriptEnabled为true），当点击log按钮时，也会调用console相应的函数把日志打印出来。</p>\n<p>可以获取到的信息有：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onConsoleMessage</span><span class=\"params\">(ConsoleMessage consoleMessage)</span> </span>&#123;</div><div class=\"line\">\tLog.e(<span class=\"string\">\"ncmon\"</span>, <span class=\"string\">\"onConsoleMessage : \"</span></div><div class=\"line\">          + <span class=\"string\">\"\\nmessage=\"</span> + consoleMessage.message()</div><div class=\"line\">          + <span class=\"string\">\"\\nlineNumber=\"</span> + consoleMessage.lineNumber()</div><div class=\"line\">          + <span class=\"string\">\"\\nmessageLevel=\"</span> + consoleMessage.messageLevel()</div><div class=\"line\">          + <span class=\"string\">\"\\nsourceId=\"</span> + consoleMessage.sourceId());</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onConsoleMessage(consoleMessage);</div><div class=\"line\">&#125;</div><div class=\"line\">ncmon : onConsoleMessage : </div><div class=\"line\">    message=Uncaught TypeError: Cannot read property <span class=\"string\">'getItem'</span> of <span class=\"keyword\">null</span></div><div class=\"line\">    lineNumber=<span class=\"number\">2</span></div><div class=\"line\">    messageLevel=ERROR</div><div class=\"line\">    sourceId=https:<span class=\"comment\">//m.baidu.com/?from=844b&amp;vit=fps</span></div><div class=\"line\">chromium: [INFO:CONSOLE(<span class=\"number\">2</span>)] <span class=\"string\">\"Uncaught TypeError: Cannot read property 'getItem' of null\"</span>, source: https:<span class=\"comment\">//m.baidu.com/?from=844b&amp;vit=fps (2)</span></div></pre></td></tr></table></figure>\n<p>可以看到除了楼主输出的日志外，还有chromium的日志，这里也就要体现返回值的作用，如果返回true时，就表示拦截了console输出，系统就不再通过console输出出来了；如果返回false(默认值)，则表示没有拦截console输出，调用系统默认处理</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConsoleMessage</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> MessageLevel mLevel;</div><div class=\"line\">    <span class=\"keyword\">private</span> String mMessage;</div><div class=\"line\">    <span class=\"keyword\">private</span> String mSourceId;</div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mLineNumber;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"拦截网页中JS弹框\"><a href=\"#拦截网页中JS弹框\" class=\"headerlink\" title=\"拦截网页中JS弹框\"></a>拦截网页中JS弹框</h2><p>三种类型的弹框</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onJsAlert</span><span class=\"params\">(WebView view, String url, String message,</span></span></div><div class=\"line\">        JsResult result) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>当网页调用alert()来弹出alert弹出框前回调，用以拦截alert()函数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onJsConfirm</span><span class=\"params\">(WebView view, String url, String message,</span></span></div><div class=\"line\">        JsResult result) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>带有确定取消提示，当网页调用confirm()来弹出confirm弹出框前回调，用以拦截confirm()函数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onJsPrompt</span><span class=\"params\">(WebView view, String url, String message,</span></span></div><div class=\"line\">        String defaultValue, JsPromptResult result) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>带有输入框的弹窗，当网页调用prompt()来弹出prompt弹出框前回调，用以拦截prompt()函数</p>\n<ul>\n<li><p>处理JS弹框首先需要设置JavaScript支持，也必须设置WebChromeClient.</p>\n</li>\n<li><p>参数</p>\n<p>url:page_with_curl:：弹出对话框的网页网址</p>\n<p>message:speech_balloon::对话框的内容</p>\n<p>result:closed_umbrella:: 返回给JavaScript的响应，JsResult.confirm()表示点击了弹出框的确定按钮，JsResult.cancel()则表示点击了弹出框的取消按钮。<font color=\"red\">其中JsPromptResult也是继承JsResult的，只是多了输入的内容变量 (String mStringResult)</font></p>\n</li>\n<li><p>返回值 </p>\n<p>true Native 自行处理弹窗逻辑，不弹出alert弹窗了</p>\n<p>false WebView 自行弹出alert对话框处理</p>\n<p>如果是return true，此时我们必须手动调用JsResult的.confirm()或.cancel()方法，因为如果没有调用JsResult的confirm()或cancel()来告诉WebView你的处理结果，则WebView就会认为这个弹出框还一直弹在那里（虽然此时根本没有弹框弹出），所以之后你再点击alert按钮时，将会无效。这一点一定要注意。</p>\n</li>\n</ul>\n<h2 id=\"打开和关闭Window\"><a href=\"#打开和关闭Window\" class=\"headerlink\" title=\"打开和关闭Window\"></a>打开和关闭Window</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateWindow</span><span class=\"params\">(WebView view, <span class=\"keyword\">boolean</span> isDialog,</span></span></div><div class=\"line\">        <span class=\"keyword\">boolean</span> isUserGesture, Message resultMsg) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>这个方法回调的前提需要设置WebView多窗口支持，就是浏览器的多个tab</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">webSettings.setSupportMultipleWindows(<span class=\"keyword\">true</span>);<span class=\"comment\">//支持多窗口。如果设置为true</span></div></pre></td></tr></table></figure>\n<p>在Html中，超级链接标签a里有一个target属性，其意义是决定”是否在新窗口/标签页中打开链接”，如果不写target=”_blank”那么就是在相同的标签页打开，如果写了，就是在新的空白标签页中打开。比如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://www.taobao.com/\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"淘宝\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"_blank\"</span>&gt;</span>新窗口打开链接<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>WebView默认是不支持target，点击上面的链接会在当前WebView中打开此链接。</p>\n<p>完整逻辑如下</p>\n<ul>\n<li><p>没有设置setSupportMultipleWindows属性为true</p>\n<ul>\n<li>没有setWebChromeClient：点击此链接会在当前WebView中打开此链接</li>\n<li>有setWebChromeClient：点击此链接会在当前WebView中打开此链接，不会回调onCreateWindow方法</li>\n</ul>\n</li>\n<li><p>有设置setSupportMultipleWindows属性为true</p>\n<ul>\n<li><p>没有setWebChromeClient：点击此链接不会在当前WebView中打开此链接</p>\n</li>\n<li><p>有setWebChromeClient</p>\n<ul>\n<li>没有重写onCreateWindow方法：点击此链接不会在当前WebView中打开此链接，会回调onCreateWindow方法</li>\n<li>有重写onCreateWindow方法：点击此链接不会在当前WebView中打开此链接，会回调onCreateWindow方法，会在你新创建的WebView中打开此链接</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateWindow</span><span class=\"params\">(WebView webView, <span class=\"keyword\">boolean</span> isDialog, <span class=\"keyword\">boolean</span> isUserGesture, Message resultMsg)</span> </span>&#123;</div><div class=\"line\">    Log.i(<span class=\"string\">\"bqt\"</span>, <span class=\"string\">\"【onCreateWindow】 \"</span> + isDialog + <span class=\"string\">\"  \"</span> + isUserGesture + <span class=\"string\">\"\\n详细信息\"</span> + resultMsg.toString());</div><div class=\"line\">    <span class=\"keyword\">if</span> (activity != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">        WebView childView = <span class=\"keyword\">new</span> WebView(activity);<span class=\"comment\">//Parent WebView cannot host it's own popup window.</span></div><div class=\"line\">        childView.setBackgroundColor(Color.GREEN);</div><div class=\"line\">        childView.setWebViewClient(<span class=\"keyword\">new</span> WebViewClient() &#123;</div><div class=\"line\">            <span class=\"meta\">@Override</span></div><div class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">shouldOverrideUrlLoading</span><span class=\"params\">(WebView view, String url)</span> </span>&#123;</div><div class=\"line\">                Log.i(<span class=\"string\">\"bqt\"</span>, <span class=\"string\">\"【shouldOverrideUrlLoading-子】\"</span>);</div><div class=\"line\">                activity.startActivity(<span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(url)));</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;);</div><div class=\"line\">        WebView.WebViewTransport transport = (WebView.WebViewTransport) resultMsg.obj;</div><div class=\"line\">        transport.setWebView(childView);<span class=\"comment\">//setWebView和getWebView两个方法</span></div><div class=\"line\">        resultMsg.sendToTarget();</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onCreateWindow(webView, isDialog, isUserGesture, resultMsg);<span class=\"comment\">//默认是returns false</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>感觉浏览器才会用到这个API,常规应用基本都是打开自己定制的Html页面</p>\n<p>对应的还有一个关闭Window的API，在JS调用window.close()方法时会回调此方法【<button onclick=\"window.close()\">关闭窗口</button>】</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCloseWindow</span><span class=\"params\">(WebView window)</span> </span>&#123;&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"文件选择器\"><a href=\"#文件选择器\" class=\"headerlink\" title=\"文件选择器\"></a>文件选择器</h2><p>这个方法在项目中很常用，Html中如果需要选择本机文件就需要把文件传过去。基本操作为打开文件管理器再把选择的文件传到网页中。我也有用到，就贴一下完整的代码片段。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//For Android  &gt;= 4.1</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">openFileChooser</span><span class=\"params\">(ValueCallback&lt;Uri&gt; valueCallback, String acceptType, String capture)</span> </span>&#123;</div><div class=\"line\">    uploadMessage = valueCallback;</div><div class=\"line\">    openImageChooserActivity();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// For Android &gt;= 5.0</span></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onShowFileChooser</span><span class=\"params\">(WebView webView, ValueCallback&lt;Uri[]&gt; filePathCallback, WebChromeClient.FileChooserParams fileChooserParams)</span> </span>&#123;</div><div class=\"line\">    uploadMessageAboveL = filePathCallback;</div><div class=\"line\">    Intent i = <span class=\"keyword\">new</span> Intent(Intent.ACTION_GET_CONTENT);</div><div class=\"line\">    i.addCategory(Intent.CATEGORY_OPENABLE);</div><div class=\"line\">    <span class=\"keyword\">if</span> (fileChooserParams != <span class=\"keyword\">null</span> &amp;&amp; fileChooserParams.getAcceptTypes() != <span class=\"keyword\">null</span></div><div class=\"line\">                &amp;&amp; fileChooserParams.getAcceptTypes().length &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\ti.setType(fileChooserParams.getAcceptTypes()[<span class=\"number\">0</span>]);</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\ti.setType(<span class=\"string\">\"*/*\"</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">    startActivityForResult(Intent.createChooser(i, <span class=\"string\">\"File Chooser\"</span>), FILECHOOSER_RESULTCODE);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"> <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onActivityResult</span><span class=\"params\">(<span class=\"keyword\">int</span> requestCode, <span class=\"keyword\">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class=\"line\">        <span class=\"keyword\">if</span> (requestCode == FILE_CHOOSER_RESULT_CODE) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == uploadMessage &amp;&amp; <span class=\"keyword\">null</span> == uploadMessageAboveL) &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            Uri result = data == <span class=\"keyword\">null</span> || resultCode != RESULT_OK ? <span class=\"keyword\">null</span> : data.getData();</div><div class=\"line\">            <span class=\"keyword\">if</span> (uploadMessageAboveL != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                onActivityResultAboveL(requestCode, resultCode, data);</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (uploadMessage != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                uploadMessage.onReceiveValue(result);</div><div class=\"line\">                uploadMessage = <span class=\"keyword\">null</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">onActivityResultAboveL</span><span class=\"params\">(<span class=\"keyword\">int</span> requestCode, <span class=\"keyword\">int</span> resultCode, Intent intent)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (requestCode != FILE_CHOOSER_RESULT_CODE || uploadMessageAboveL == <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        Uri[] results = <span class=\"keyword\">null</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (resultCode == Activity.RESULT_OK) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (intent != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                String dataString = intent.getDataString();</div><div class=\"line\">                ClipData clipData = intent.getClipData();</div><div class=\"line\">                <span class=\"keyword\">if</span> (clipData != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    results = <span class=\"keyword\">new</span> Uri[clipData.getItemCount()];</div><div class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; clipData.getItemCount(); i++) &#123;</div><div class=\"line\">                        ClipData.Item item = clipData.getItemAt(i);</div><div class=\"line\">                        results[i] = item.getUri();</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span> (dataString != <span class=\"keyword\">null</span>) &#123;</div><div class=\"line\">                    results = <span class=\"keyword\">new</span> Uri[]&#123;Uri.parse(dataString)&#125;;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        uploadMessageAboveL.onReceiveValue(results);</div><div class=\"line\">        uploadMessageAboveL = <span class=\"keyword\">null</span>;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<p>@params filePathCallback:  提供要上传的文件的路径列表, or NULL to cancel. Must only be called if the showFileChooser implementations returns true.</p>\n<p>@params fileChooserParams:  描述要打开的文件选择器的模式，以及与之一起使用的选项。</p>\n<h2 id=\"视频-全屏-播放\"><a href=\"#视频-全屏-播放\" class=\"headerlink\" title=\"视频(全屏)播放\"></a>视频(全屏)播放</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Bitmap <span class=\"title\">getDefaultVideoPoster</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Html中，视频（video）控件在没有播放的时候将给用户展示一张“海报”图片（预览图）。其预览图是由Html中video标签的<a href=\"http://www.w3school.com.cn/tags/att_video_poster.asp\" target=\"_blank\" rel=\"external\">poster</a>属性来指定的。如果开发者没有设置poster属性, 则可以通过这个方法来设置默认的预览图。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span> <span class=\"attr\">poster</span>=<span class=\"string\">\"/images/w3school.gif\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.mp4\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/mp4\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">\"movie.ogg\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"video/ogg\"</span>&gt;</span></div><div class=\"line\">   Your browser does not support the video tag.</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> View <span class=\"title\">getVideoLoadingProgressView</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>播放视频时，在第一帧呈现之前，需要花一定的时间来进行数据缓冲。ChromeClient可以使用这个函数来提供一个在数据缓冲时显示的视图。 例如,ChromeClient可以在缓冲时显示一个转轮动画。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onShowCustomView</span><span class=\"params\">(View view, CustomViewCallback callback)</span> </span>&#123;&#125;;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onHideCustomView</span><span class=\"params\">()</span> </span>&#123;&#125;</div></pre></td></tr></table></figure>\n<p>通知主机应用webview需要显示一个custom view，主要是用在视频全屏 HTML5 Video support。</p>\n<p>网页中有H5播放flash video的时候按下全屏按钮将会调用到这个方法，一般用作设置网页播放全屏操作。</p>\n<h2 id=\"获取地理位置\"><a href=\"#获取地理位置\" class=\"headerlink\" title=\"获取地理位置\"></a>获取地理位置</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onGeolocationPermissionsShowPrompt</span><span class=\"params\">(String origin, GeolocationPermissions.Callback callback)</span> </span>&#123;&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onGeolocationPermissionsHidePrompt</span><span class=\"params\">()</span> </span>&#123;&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GeolocationPermissions</span> </span>&#123;</div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * A callback interface used by the host application to set the Geolocation</div><div class=\"line\">     * permission state for an origin.</div><div class=\"line\">     */</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Callback</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">/**</span></div><div class=\"line\">         * Sets the Geolocation permission state for the supplied origin.</div><div class=\"line\">         *</div><div class=\"line\">         * <span class=\"doctag\">@param</span> origin the origin for which permissions are set</div><div class=\"line\">         * <span class=\"doctag\">@param</span> allow whether or not the origin should be allowed to use the</div><div class=\"line\">         *              Geolocation API</div><div class=\"line\">         * <span class=\"doctag\">@param</span> retain whether the permission should be retained beyond the</div><div class=\"line\">         *               lifetime of a page currently being displayed by a</div><div class=\"line\">         *               WebView</div><div class=\"line\">         */</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">invoke</span><span class=\"params\">(String origin, <span class=\"keyword\">boolean</span> allow, <span class=\"keyword\">boolean</span> retain)</span></span>;</div><div class=\"line\">    &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>JavaScript中有调用定位的API时会调用本方法</p>\n<p>@param origin 来源，谁调用的，传回给谁</p>\n<p>@param allow 是否允许本次定位</p>\n<p>@param retain 是否保持允许定位状态，传递了true后，本WebView之后都可以获得当前位置信息。</p>\n<p>对应的onGeolocationPermissionsHidePrompt（）就是通知应用程序，地理位置权限请求已被取消</p>\n<h2 id=\"请求权限\"><a href=\"#请求权限\" class=\"headerlink\" title=\"请求权限\"></a>请求权限</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * Notify the host application that web content is requesting permission to</div><div class=\"line\">     * access the specified resources and the permission currently isn't granted</div><div class=\"line\">     * or denied. The host application must invoke &#123;<span class=\"doctag\">@link</span> PermissionRequest#grant(String[])&#125;</div><div class=\"line\">     * or &#123;<span class=\"doctag\">@link</span> PermissionRequest#deny()&#125;.</div><div class=\"line\">     *</div><div class=\"line\">     * If this method isn't overridden, the permission is denied.</div><div class=\"line\">     *</div><div class=\"line\">     * <span class=\"doctag\">@param</span> request the PermissionRequest from current web content.</div><div class=\"line\">     */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPermissionRequest</span><span class=\"params\">(PermissionRequest request)</span> </span>&#123;</div><div class=\"line\">    request.deny();</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Notify the host application that the given permission request</div><div class=\"line\"> * has been canceled. Any related UI should therefore be hidden.</div><div class=\"line\"> *</div><div class=\"line\"> * <span class=\"doctag\">@param</span> request the PermissionRequest that needs be canceled.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPermissionRequestCanceled</span><span class=\"params\">(PermissionRequest request)</span> </span>&#123;&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PermissionRequest</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String RESOURCE_VIDEO_CAPTURE = <span class=\"string\">\"android.webkit.resource.VIDEO_CAPTURE\"</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String RESOURCE_AUDIO_CAPTURE = <span class=\"string\">\"android.webkit.resource.AUDIO_CAPTURE\"</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String RESOURCE_PROTECTED_MEDIA_ID =</div><div class=\"line\">            <span class=\"string\">\"android.webkit.resource.PROTECTED_MEDIA_ID\"</span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String RESOURCE_MIDI_SYSEX = <span class=\"string\">\"android.webkit.resource.MIDI_SYSEX\"</span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> Uri <span class=\"title\">getOrigin</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String[] getResources();</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">grant</span><span class=\"params\">(String[] resources)</span></span>;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">deny</span><span class=\"params\">()</span></span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>@method getorigin()获取来源</p>\n<p>@method getResources()获取请求的权限列表</p>\n<p>@method grant ()允许的权限列表</p>\n<p>@method deny()拒绝了权限</p>\n<p>需要的就是PermissRequest中定义的四个常亮代表的权限，关于权限的使用是其他知识点，大家可以看看这个<a href=\"https://codeday.me/bug/20181125/420409.html\" target=\"_blank\" rel=\"external\">栗子</a>。</p>\n<h2 id=\"其他方法\"><a href=\"#其他方法\" class=\"headerlink\" title=\"其他方法\"></a>其他方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> *获得所有访问历史项目的列表，用于链接着色。</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">getVisitedHistory</span><span class=\"params\">(ValueCallback&lt;String[]&gt; callback)</span> </span>&#123;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> *webview请求得到焦点，发生这个主要是当前webview不是前台状态，是后台webview。</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onRequestFocus</span><span class=\"params\">(WebView view)</span> </span>&#123;&#125;</div></pre></td></tr></table></figure>","next":{"title":"Android WebView必知必会(2)-WebSettings","slug":"webview-learning-WebSettings"},"link":"http://ncmon.com/post/webview-learning-WebChromeClient/","toc":[{"title":"简介","id":"简介","index":"1"},{"title":"获取网页的加载进度","id":"获取网页的加载进度","index":"2"},{"title":"获取网页中的基本信息","id":"获取网页中的基本信息","index":"3"},{"title":"拦截网页中JS控制台消息","id":"拦截网页中JS控制台消息","index":"4"},{"title":"拦截网页中JS弹框","id":"拦截网页中JS弹框","index":"5"},{"title":"打开和关闭Window","id":"打开和关闭Window","index":"6"},{"title":"文件选择器","id":"文件选择器","index":"7"},{"title":"视频(全屏)播放","id":"视频-全屏-播放","index":"8"},{"title":"获取地理位置","id":"获取地理位置","index":"9"},{"title":"请求权限","id":"请求权限","index":"10"},{"title":"其他方法","id":"其他方法","index":"11"}],"copyright":{"author":"ncmon","link":"<a href=\"http://ncmon.com/post/webview-learning-WebChromeClient/\" title=\"Android WebView必知必会(3)-WebChromeClient\">http://ncmon.com/post/webview-learning-WebChromeClient/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"},"reward":true}